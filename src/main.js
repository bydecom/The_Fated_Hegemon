// src/main.js
import './style.css';
import { DemoScene } from './scenes/DemoScene.js';
import { PauseScene } from './scenes/PauseScene.js'; // ‚≠ê IMPORT SCENE M·ªöI
import { UIScene } from './scenes/UIScene.js'; // ‚≠ê IMPORT SCENE M·ªöI

// C·∫•u h√¨nh Phaser
const config = {
    type: Phaser.AUTO,
    // ‚≠ê S·ª¨A L·ªñI: ƒê·ªÉ k√≠ch th∆∞·ªõc t·ª± ƒë·ªông l·∫•p ƒë·∫ßy m√†n h√¨nh
    width: window.innerWidth,
    height: window.innerHeight,
    parent: 'app',
    backgroundColor: '#2c3e50',
    scene: [
        DemoScene,
        PauseScene,
        UIScene // ‚≠ê TH√äM V√ÄO DANH S√ÅCH
    ],
    physics: {
        default: 'arcade',
        arcade: {
            gravity: { y: 0 },
            debug: false
        }
    },
    scale: {
        // ‚≠ê S·ª¨A L·ªñI QUAN TR·ªåNG NH·∫§T: Chuy·ªÉn v·ªÅ ch·∫ø ƒë·ªô RESIZE
        mode: Phaser.Scale.RESIZE,
        autoCenter: Phaser.Scale.CENTER_BOTH,
    },
    // ... (input config gi·ªØ nguy√™n)
};

// Kh·ªüi ch·∫°y game
const game = new Phaser.Game(config);

// ‚≠ê B∆Ø·ªöC 2: ƒê∆†N GI·∫¢N H√ìA EVENT LISTENER
// Kh√¥ng c·∫ßn g·ªçi game.scale.resize() n·ªØa, Phaser s·∫Ω t·ª± ƒë·ªông x·ª≠ l√Ω v·ªõi ch·∫ø ƒë·ªô FIT.
// Ch√∫ng ta ch·ªâ gi·ªØ l·∫°i ƒë·ªÉ x·ª≠ l√Ω logic xoay m√†n h√¨nh tr√™n mobile.
window.addEventListener('resize', () => {
    // C√≥ th·ªÉ tr·ªëng ho·∫∑c b·∫°n c√≥ th·ªÉ th√™m logic UI ƒë·∫∑c bi·ªát ·ªü ƒë√¢y n·∫øu c·∫ßn
});

// X·ª≠ l√Ω xoay m√†n h√¨nh tr√™n mobile
window.addEventListener('orientationchange', () => {
    setTimeout(() => {
        // Th√¥ng b√°o cho user xoay m√†n h√¨nh n·∫øu c·∫ßn
        if (isMobile()) {
            const screenWidth = window.innerWidth;
            const screenHeight = window.innerHeight;
            const isLandscape = screenWidth > screenHeight;
            
            if (!isLandscape) {
                showOrientationMessage();
            }
        }
    }, 100);
});

// H√†m hi·ªÉn th·ªã th√¥ng b√°o xoay m√†n h√¨nh
function showOrientationMessage() {
    // T·∫°o overlay th√¥ng b√°o
    const overlay = document.createElement('div');
    overlay.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.8);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10000;
        color: white;
        font-family: Arial, sans-serif;
        text-align: center;
    `;
    
    overlay.innerHTML = `
        <div>
            <h2>üîÑ Xoay m√†n h√¨nh</h2>
            <p>Vui l√≤ng xoay ƒëi·ªán tho·∫°i sang ch·∫ø ƒë·ªô ngang ƒë·ªÉ ch∆°i game t·ªët nh·∫•t</p>
            <button onclick="this.parentElement.parentElement.remove()" 
                    style="padding: 10px 20px; margin-top: 20px; background: #3498db; color: white; border: none; border-radius: 5px; cursor: pointer;">
                ƒê√£ xoay m√†n h√¨nh
            </button>
        </div>
    `;
    
    document.body.appendChild(overlay);
    
    // T·ª± ƒë·ªông ·∫©n sau 5 gi√¢y
    setTimeout(() => {
        if (overlay.parentElement) {
            overlay.remove();
        }
    }, 5000);
}

// Ki·ªÉm tra v√† hi·ªÉn th·ªã th√¥ng b√°o xoay m√†n h√¨nh khi kh·ªüi ƒë·ªông
if (isMobile()) {
    const screenWidth = window.innerWidth;
    const screenHeight = window.innerHeight;
    const isLandscape = screenWidth > screenHeight;
    
    if (!isLandscape) {
        setTimeout(showOrientationMessage, 1000);
    }
}

// H√†m y√™u c·∫ßu full screen
function requestFullscreen() {
    const elem = document.documentElement;
    if (elem.requestFullscreen) {
        elem.requestFullscreen();
    } else if (elem.webkitRequestFullscreen) {
        elem.webkitRequestFullscreen();
    } else if (elem.msRequestFullscreen) {
        elem.msRequestFullscreen();
    }
}

// Th√™m n√∫t full screen cho mobile
if (isMobile()) {
    const fullscreenBtn = document.createElement('button');
    fullscreenBtn.innerHTML = '‚õ∂';
    fullscreenBtn.style.cssText = `
        position: fixed;
        top: 10px;
        right: 10px;
        width: 40px;
        height: 40px;
        background: rgba(0, 0, 0, 0.7);
        color: white;
        border: none;
        border-radius: 50%;
        font-size: 20px;
        cursor: pointer;
        z-index: 1000;
    `;
    fullscreenBtn.onclick = requestFullscreen;
    document.body.appendChild(fullscreenBtn);
}

// Export ƒë·ªÉ c√≥ th·ªÉ truy c·∫≠p t·ª´ console
window.game = game;